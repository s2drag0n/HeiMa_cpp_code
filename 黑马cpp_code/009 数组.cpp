#include <iostream>
using namespace std;

/*
========================================================================================================
数组：
	1.数组中的每个元素都是相同的数据类型
	2.数组是由连续的内存组成
========================================================================================================
一维数组定义方式
	1.数据类型 数组名[数组长度]；此时会随机初始化
		1.全局数组，未初始化时，默认值都是 0；
		2.局部数组，未初始化时，默认值为随机的不确定的值；
		3.局部数组，初始化一部分时，未初始化的部分默认值为 0；
	2.数据类型 数组名[数组长度] = {值1，值2，值3......}；如果初始化时，没有全部填写完，会用0来填补数组
	3.数据类型 数组名[] = {值1，值2，值3......}；
========================================================================================================
一维数组数组名：
	1.统计整个数组在内存中的长度		sizeof(array) / sizeof(array[0])
	2.可以获取数组在内存中的首地址		cout << array << endl;
	3.是一个常量，已经指向了某一个固定位置，不可以进行赋值操作
========================================================================================================
一维数组冒泡排序
========================================================================================================
二维数组定义方式
	1.数据类型 数组名[行数][列数];
	2.数据类型 数组名[行数][列数] = { { 1,2 }, { 3,4 } };
	3.数据类型 数组名[行数][列数] = { 1,2,3,4 };
	3.数据类型 数组名[][列数] = { 1,2,3,4 };
========================================================================================================
二维数组数组名
	1.统计整个数组在内存中的长度		sizeof(array) / sizeof(array[0][0])
	2.可以获取数组或行在内存中的首地址	cout << (int)array << endl;				cout << (int)array[0] << endl;
	3.统计行数						sizeof(array) / sizeof(array[0])
	4.统计列数						sizeof(array[0]) / sizeof(array[0][0])

*/

int main() {

	//一维数组练习：在一个数组中记录了五只小猪的体重，找出并打印最重的小猪的体重

	//一维数组练习：声明一个五个元素的数组并将其逆置

	//二维数组练习：三名同学张三、李四、王五，在一次考试中各科成绩如下，请分别输出总成绩

	return 0;
}